apiVersion: v1
data:
  CONFIGMAP_ENV1: configmap_env1
  CONFIGMAP_ENV2: configmap_env2
kind: ConfigMap
metadata:
  labels:
    app: flask-template
    env: sandbox
    package: deployment-3
    provisioned_by: kcc
  name: flask-template-config
  namespace: sample
---
apiVersion: v1
data:
  MYSQL_ROOT_PASSWORD: cGFzc3dvcmQK
kind: Secret
metadata:
  labels:
    app: flask-template
    env: sandbox
    package: deployment-3
    provisioned_by: kcc
  name: flask-template-secret
  namespace: sample
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: flask-template
    env: sandbox
    package: deployment-3
    provisioned_by: kcc
  name: flask-template
  namespace: sample
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: flask-template
    env: sandbox
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-template
    env: sandbox
    package: deployment-3
    provisioned_by: kcc
  name: flask-template
  namespace: sample
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-template
      env: sandbox
  template:
    metadata:
      labels:
        app: flask-template
        env: sandbox
        package: deployment-3
        provisioned_by: kcc
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: flask-template-config
        - secretRef:
            name: flask-template-secret
        image: docker.io/jaichenchlani/flask-template:0.1
        name: flask-template
        ports:
        - containerPort: 8080
          name: http-0
          protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 32Mi
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
---
apiVersion: monitoring.googleapis.com/v1
kind: PodMonitoring
metadata:
  labels:
    app: flask-template
    env: sandbox
    package: deployment-3
    provisioned_by: kcc
  name: flask-template
  namespace: sample
spec:
  endpoints:
  - interval: 30s
    port: metrics
  - interval: 10s
    path: /stats/prometheus
    port: 15020
    scheme: http
  selector:
    matchLabels:
      app: flask-template
      env: sandbox
